server:
  port: 8080

spring:
  application:
    name: CrediYaAuth
  devtools:
    add-properties: false
  r2dbc:
    url: r2dbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:crediya_auth}
    username: ${DB_USERNAME:crediya_user}
    password: ${DB_PASSWORD:crediya_pass}
    pool:
      initial-size: 10
      max-size: 20
      max-idle-time: 30m
      validation-query: SELECT 1
  sql:
    init:
      mode: never

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      probes:
        enabled: true

# R2DBC PostgreSQL adapter configuration
adapters:
  r2dbc:
    host: ${DB_HOST:localhost}
    port: ${DB_PORT:5432}
    database: ${DB_NAME:crediya_auth}
    schema: public
    username: ${DB_USERNAME:crediya_user}
    password: ${DB_PASSWORD:crediya_pass}

cors:
  allowed-origins: http://localhost:4200,http://localhost:8080

routes:
  paths:
    users: /api/v1/users
    login: /api/v1/login

# Security Configuration
security:
  jwt:
    public-paths:
      - /api/v1/login
      - /actuator/health
      - /actuator/prometheus

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-very-long-secret-key-here-must-be-256-bits-minimum-for-security}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
  issuer: ${JWT_ISSUER:crediya-auth-service}
  audience: ${JWT_AUDIENCE:crediya-app}
